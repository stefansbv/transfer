# Transformation recipes
<recipe>
  version               = 1
  syntaxversion         = 1
  name                  = Test recipe
  description           = Does this and that...
</recipe>

<config>
  <source>
    reader              = excel
    file                = t/siruta.xls
  </source>

  <destination>
     writer             = db
     target             = siruta
     table              = siruta
  </destination>

  <target siruta>
    uri                 = db:firebird://localhost/siruta
  </target>
</config>

<tables>
  worksheet             = Foaie1
  <table siruta>
    description         = SIRUTA
    skiprows            = 1
    logfield            = siruta
    orderby             = siruta
    <headermap>
       CodSIRUTA        = siruta
       DenumireLocalitate = denloc
       CodPostal        = codp
       CodDeJudet       = jud
       CodForTutelar(unitateaadminierarhicsuperioara) = sirsup
       CodTipLocalitate = tip
       CodNivel         = niv
       CodMediu(1URBAN3RURAL) = med
       FactorDeSortarePeJudete = fsj
       FactorDeSortareInOrdineAlfabeticaALocalitatilor = fsl
       Rang             = rang
    </headermap>
  </table>
  <table judete>
    description         = Judete
    skiprows            = 0
    logfield            = cod_jud
    <headermap>
      Codjudeţ          = cod_jud
       Denumirejudeț    = denj
       FactorDeSortarePeJudețe = fsj
       MNEMONIC         = mnemonic
       ZONA             = zona
    </headermap>
  </table>
</tables>

<transform            column>
  <step>
    field               = codp
    method              = number_only
    method              = null_ifzero
  </step>
</transform>

<transform            row>
  <step>
    type                = lookupdb
    datasource          = test_dict
    hints               = localitati
    <field_src>
      denumire          = localitate
    </field_src>
    method              = lookup_in_dbtable
    <field_dst>
      denloc            = localitate
    </field_dst>
    <field_dst>
      cod               = siruta
    </field_dst>
  </step>

  <step>
    type                = lookupdb
    datasource          = test_dict
    hints               = localitati
    <field_src>
      denumire          = localitate
    </field_src>
    method              = lookup_in_dbtable
    <field_dst>
      denloc            = localitate
      cod               = siruta
    </field_dst>
  </step>

  <step>
    type                = lookupdb
    datasource          = test_dict
    hints               = localitati
    <field_src>
      denumire          = localitate
    </field_src>
    method              = lookup_in_dbtable
    <field_dst>
      denloc            = localitate
    </field_dst>
    field_dst           = siruta
  </step>

  <step>
    type                = lookupdb
    datasource          = test_dict
    field_src           = localitate
    method              = lookup_in_dbtable
    field_dst           = siruta
  </step>

  # Use " to preserve space, not '
  <step>
    type                = split
    separator           = ,
    field_src           = adresa
    method              = split_field
    field_dst           = localitate
    field_dst           = strada
    field_dst           = numarul
  </step>

  # Use " to preserve space, not '
  <step>
    type                = join
    separator           = ", "
    field_src           = localitate
    field_src           = strada
    field_src           = numarul
    method              = join_fields
    field_dst           = adresa
  </step>

  # Scenario: a field can have only the values from the
  # datasource/valid_elts but it contains other info as well.  Move
  # this info to another field, ex: observations
  <step>
    type                = copy
    datasource          = status
    field_src           = status
    method              = move_filtered
    field_dst           = observations
    attributes          = MOVE | APPENDSRC
  </step>

  <step>
    type                = lookup
    datasource          = category
    field_src           = category
    method              = lookup_in_ds
    field_dst           = categ_code
  </step>

  <step>
    type                = batch
    field_src           = casa_inc
    field_src           = casa_pl
    field_src           = banca_inc
    field_src           = banca_pl
    method              = copy_nonzero
    field_dst           = suma
    attributes          = COPY | REPLACENULL
  </step>

  # <step>
  #   type                = nonexisting
  #   datasource          = somesource
  #   field_src           = field0
  #   method              = method_name
  #   field_dst           = field1
  # </step>
</transform>

<datasources>
  <hints one_element>
    <record>
      item              = element 1
      hint              = hint 1
    </record>
  </hints>

  <hints two_elements>
    <record>
      item              = element 1
      hint              = hint 1
    </record>
    <record>
      item              = element 2
      hint              = hint 2
    </record>
  </hints>

  <valid_elts two_elements>
    item                = element 1
    item                = element 2
  </valid_elts>

  <valid_elts one_element>
    item                = one single element
  </valid_elts>

  <non_valid_elts two_elements>
    item                = element 1
    item                = element 2
  </non_valid_elts>

  <non_valid_elts one_element>
    item                = one single element
  </non_valid_elts>

  <datasource one_element>
    <record>
      item              = Element name
      code              = Code
    </record>
  </datasource>

  <datasource two_elements>
    <record>
      item              = Element name 1
      code              = Code1
    </record>
    <record>
      item              = Element name 2
      code              = Code2
    </record>
  </datasource>
</datasources>
